{"version":3,"sources":["../src/index.tsx","../src/utils/groupItems.ts","../src/utils/validateItems.ts","../src/utils/panStrategies.ts","../src/hooks/useRow.tsx","../src/hooks/useTimelineContext.tsx","../src/store/Timeline.tsx","../src/hooks/useTimeline.tsx","../src/hooks/useElementRef.tsx","../src/hooks/useItem.tsx"],"sourcesContent":["export * from \"./utils\";\r\nexport * from \"./types\";\r\nexport { default as useRow } from \"./hooks/useRow\";\r\nexport { default as useItem } from \"./hooks/useItem\";\r\nexport { TimelineContext, TimelineProvider } from \"./store/Timeline\";\r\nexport { default as useTimelineContext } from \"./hooks/useTimelineContext\";\r\n","import type { ItemDefinition, Span } from \"../types\";\r\n\r\nexport const groupItemsToSubrows = <T extends ItemDefinition = ItemDefinition>(\r\n\titems: T[],\r\n\tspan?: Span,\r\n) => {\r\n\tconst sortedItems = [...items];\r\n\tsortedItems.sort((a, b) => (a.span.start > b.span.start ? 1 : -1));\r\n\r\n\treturn sortedItems.reduce<Record<string, T[][]>>((acc, item) => {\r\n\t\tif (span && (item.span.start >= span.end || item.span.end <= span.start))\r\n\t\t\treturn acc;\r\n\r\n\t\tif (!acc[item.rowId]) {\r\n\t\t\tacc[item.rowId] = [[item]];\r\n\t\t\treturn acc;\r\n\t\t}\r\n\r\n\t\tfor (let index = 0; index < acc[item.rowId].length; index++) {\r\n\t\t\tconst currentSubrow = acc[item.rowId][index];\r\n\t\t\tconst lastItemInSubrow = currentSubrow[currentSubrow.length - 1];\r\n\t\t\tif (item.span.start >= lastItemInSubrow.span.end) {\r\n\t\t\t\tacc[item.rowId][index].push(item);\r\n\t\t\t\treturn acc;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tacc[item.rowId].push([item]);\r\n\t\treturn acc;\r\n\t}, {});\r\n};\r\n\r\nexport const groupItemsToRows = <T extends ItemDefinition = ItemDefinition>(\r\n\titems: T[],\r\n\tspan?: Span,\r\n) => {\r\n\treturn items.reduce<Record<string, T[]>>((acc, item) => {\r\n\t\tif (span && (item.span.start >= span.end || item.span.end <= span.start))\r\n\t\t\treturn acc;\r\n\r\n\t\tif (!acc[item.rowId]) {\r\n\t\t\tacc[item.rowId] = [item];\r\n\t\t} else {\r\n\t\t\tacc[item.rowId].push(item);\r\n\t\t}\r\n\r\n\t\treturn acc;\r\n\t}, {});\r\n};\r\n","import type { ItemDefinition } from \"../types\";\r\n\r\nexport const validateItems = (item: ItemDefinition) =>\r\n\titem.span.end > item.span.start;\r\n","import { useLayoutEffect, useRef } from \"react\";\r\n\r\nimport type { OnPanEnd, PanEndEvent, TimelineBag } from \"../types\";\r\n\r\nexport type UsePanStrategy = (\r\n\ttimelineBag: TimelineBag,\r\n\tonPanEnd: OnPanEnd,\r\n) => void;\r\n\r\nexport const useWheelStrategy: UsePanStrategy = (timelineBag, onPanEnd) => {\r\n\tuseLayoutEffect(() => {\r\n\t\tconst element = timelineBag.timelineRef.current;\r\n\t\tif (!element) return;\r\n\r\n\t\tconst pointerWheelHandler = (event: WheelEvent) => {\r\n\t\t\tif (!event.ctrlKey && !event.metaKey) return;\r\n\r\n\t\t\tevent.preventDefault();\r\n\r\n\t\t\tconst isHorizontal = event.shiftKey;\r\n\r\n\t\t\tconst panEndEvent: PanEndEvent = {\r\n\t\t\t\tclientX: event.clientX,\r\n\t\t\t\tclientY: event.clientY,\r\n\t\t\t\tdeltaX: isHorizontal ? event.deltaX || event.deltaY : 0,\r\n\t\t\t\tdeltaY: isHorizontal ? 0 : event.deltaY,\r\n\t\t\t};\r\n\r\n\t\t\tonPanEnd(panEndEvent);\r\n\t\t};\r\n\r\n\t\telement.addEventListener(\"wheel\", pointerWheelHandler, { passive: false });\r\n\r\n\t\treturn () => {\r\n\t\t\telement.removeEventListener(\"wheel\", pointerWheelHandler);\r\n\t\t};\r\n\t}, [onPanEnd, timelineBag.timelineRef]);\r\n};\r\n\r\nexport const useDragStrategy: UsePanStrategy = (timelineContext, onPanEnd) => {\r\n\tconst lastDragX = useRef<number | null>(null);\r\n\r\n\tuseLayoutEffect(() => {\r\n\t\tconst element = timelineContext.timelineRef.current;\r\n\t\tif (!element) return;\r\n\r\n\t\tconst pointerWheelHandler = (event: WheelEvent) => {\r\n\t\t\tif (!event.ctrlKey && !event.metaKey) return;\r\n\r\n\t\t\tevent.preventDefault();\r\n\r\n\t\t\tconst isHorizontal = event.shiftKey;\r\n\r\n\t\t\tconst panEndEvent: PanEndEvent = {\r\n\t\t\t\tclientX: event.clientX,\r\n\t\t\t\tclientY: event.clientY,\r\n\t\t\t\tdeltaX: 0,\r\n\t\t\t\tdeltaY: isHorizontal ? 0 : event.deltaY,\r\n\t\t\t};\r\n\r\n\t\t\tonPanEnd(panEndEvent);\r\n\t\t};\r\n\r\n\t\telement.addEventListener(\"wheel\", pointerWheelHandler, { passive: false });\r\n\r\n\t\treturn () => {\r\n\t\t\telement.removeEventListener(\"wheel\", pointerWheelHandler);\r\n\t\t};\r\n\t}, [onPanEnd, timelineContext.timelineRef]);\r\n\r\n\tuseLayoutEffect(() => {\r\n\t\tconst element = timelineContext.timelineRef.current;\r\n\t\tif (!element) return;\r\n\r\n\t\tconst pointerdownHandler = (event: MouseEvent) => {\r\n\t\t\tif (!event.ctrlKey && !event.metaKey) return;\r\n\r\n\t\t\tlastDragX.current = event.clientX;\r\n\t\t};\r\n\r\n\t\tconst pointerupHandler = () => {\r\n\t\t\tlastDragX.current = null;\r\n\t\t};\r\n\r\n\t\tconst pointermoveHandler = (event: MouseEvent) => {\r\n\t\t\tif (!lastDragX.current) return;\r\n\r\n\t\t\tconst deltaX = event.clientX - lastDragX.current;\r\n\r\n\t\t\tlastDragX.current = event.clientX;\r\n\r\n\t\t\tconst panEndEvent: PanEndEvent = {\r\n\t\t\t\tdeltaX: -deltaX,\r\n\t\t\t\tdeltaY: 0,\r\n\t\t\t};\r\n\r\n\t\t\tonPanEnd(panEndEvent);\r\n\t\t};\r\n\r\n\t\telement.addEventListener(\"pointerup\", pointerupHandler);\r\n\t\telement.addEventListener(\"pointerdown\", pointerdownHandler);\r\n\t\telement.addEventListener(\"pointermove\", pointermoveHandler);\r\n\t\telement.addEventListener(\"pointerleave\", pointerupHandler);\r\n\r\n\t\treturn () => {\r\n\t\t\telement.removeEventListener(\"pointerup\", pointerupHandler);\r\n\t\t\telement.removeEventListener(\"pointerdown\", pointerdownHandler);\r\n\t\t\telement.removeEventListener(\"pointermove\", pointermoveHandler);\r\n\t\t\telement.removeEventListener(\"pointerleave\", pointerupHandler);\r\n\t\t};\r\n\t}, [onPanEnd, timelineContext.timelineRef]);\r\n};\r\n","import { useDroppable } from \"@dnd-kit/core\";\r\nimport type { CSSProperties } from \"react\";\r\n\r\nimport type { UseRowProps } from \"../types\";\r\n\r\nimport useTimelineContext from \"./useTimelineContext\";\r\n\r\nconst rowWrapperStyle: CSSProperties = {\r\n\tdisplay: \"inline-flex\",\r\n};\r\n\r\nconst rowStyle: CSSProperties = {\r\n\tflex: 1,\r\n\tdisplay: \"flex\",\r\n\tposition: \"relative\",\r\n\talignItems: \"stretch\",\r\n\tflexDirection: \"column\",\r\n};\r\n\r\nconst rowSidebarStyle: CSSProperties = {\r\n\tleft: 0,\r\n\tzIndex: 3,\r\n\tdisplay: \"flex\",\r\n};\r\n\r\nexport default function useRow(props: UseRowProps) {\r\n\tconst { setSidebarRef } = useTimelineContext();\r\n\r\n\tconst droppableProps = useDroppable({\r\n\t\tid: props.id,\r\n\t\tdata: props.data,\r\n\t\tdisabled: props.disabled,\r\n\t});\r\n\r\n\treturn {\r\n\t\trowStyle,\r\n\t\trowWrapperStyle,\r\n\t\trowSidebarStyle,\r\n\t\tsetSidebarRef,\r\n\t\t...droppableProps,\r\n\t};\r\n}\r\n","import { useContext } from \"react\";\r\n\r\nimport { timelineContext } from \"../store/Timeline\";\r\n\r\nexport default function useTimelineContext() {\r\n\tconst contextValue = useContext(timelineContext);\r\n\r\n\tif (contextValue === undefined) {\r\n\t\tthrow new Error(\r\n\t\t\t\"dnd-timeline: useTimelineContext() must be used within a TimelineContext\",\r\n\t\t);\r\n\t}\r\n\r\n\treturn contextValue;\r\n}\r\n","import { DndContext } from \"@dnd-kit/core\";\r\nimport { createContext } from \"react\";\r\n\r\nimport useTimeline from \"../hooks/useTimeline\";\r\nimport type { TimelineBag, TimelineContextProps } from \"../types\";\r\n\r\nexport const timelineContext = createContext<TimelineBag | undefined>(\r\n\tundefined,\r\n);\r\n\r\nexport const TimelineProvider = timelineContext.Provider;\r\n\r\nfunction TimelineProviderInner(props: TimelineContextProps) {\r\n\tconst timeline = useTimeline(props);\r\n\r\n\treturn <TimelineProvider value={timeline}>{props.children}</TimelineProvider>;\r\n}\r\n\r\nexport function TimelineContext(props: TimelineContextProps) {\r\n\treturn (\r\n\t\t<DndContext {...props}>\r\n\t\t\t<TimelineProviderInner {...props}>{props.children}</TimelineProviderInner>\r\n\t\t</DndContext>\r\n\t);\r\n}\r\n","import type { CSSProperties } from \"react\";\r\nimport { useCallback, useMemo } from \"react\";\r\n\r\nimport type {\r\n\tGetDeltaXFromScreenX,\r\n\tGetSpanFromDragEvent,\r\n\tGetSpanFromResizeEvent,\r\n\tGetValueFromScreenX,\r\n\tOnPanEnd,\r\n\tPixelsToValue,\r\n\tRange,\r\n\tTimelineBag,\r\n\tUseTimelineProps,\r\n\tValueToPixels,\r\n} from \"../types\";\r\nimport { useWheelStrategy } from \"../utils/panStrategies\";\r\n\r\nimport useElementRef from \"./useElementRef\";\r\n\r\nconst style: CSSProperties = {\r\n\tdisplay: \"flex\",\r\n\toverflow: \"hidden\",\r\n\tposition: \"relative\",\r\n\tflexDirection: \"column\",\r\n};\r\n\r\nconst DEFAULT_RESIZE_HANDLE_WIDTH = 20;\r\n\r\nexport default function useTimeline({\r\n\trange,\r\n\tonResizeEnd,\r\n\tonResizeMove,\r\n\tonResizeStart,\r\n\tonRangeChanged,\r\n\toverlayed = false,\r\n\trangeGridSizeDefinition,\r\n\tusePanStrategy = useWheelStrategy,\r\n\tresizeHandleWidth = DEFAULT_RESIZE_HANDLE_WIDTH,\r\n}: UseTimelineProps): TimelineBag {\r\n\tconst rangeStart = range.start;\r\n\tconst rangeEnd = range.end;\r\n\r\n\tconst {\r\n\t\tref: timelineRef,\r\n\t\tsetRef: setTimelineRef,\r\n\t\twidth: timelineWidth,\r\n\t\tdirection,\r\n\t} = useElementRef();\r\n\r\n\tconst {\r\n\t\tref: sidebarRef,\r\n\t\tsetRef: setSidebarRef,\r\n\t\twidth: sidebarWidth,\r\n\t} = useElementRef();\r\n\r\n\tconst timelineViewportWidth = timelineWidth - sidebarWidth;\r\n\r\n\tconst rangeGridSize = useMemo(() => {\r\n\t\tif (Array.isArray(rangeGridSizeDefinition)) {\r\n\t\t\tconst gridSizes = rangeGridSizeDefinition;\r\n\r\n\t\t\tconst rangeSize = rangeEnd - rangeStart;\r\n\r\n\t\t\tconst sortedRangeGridSizes = [...gridSizes];\r\n\t\t\tsortedRangeGridSizes.sort((a, b) => a.value - b.value);\r\n\r\n\t\t\treturn sortedRangeGridSizes.find(\r\n\t\t\t\t(curr) => !curr.maxRangeSize || rangeSize < curr.maxRangeSize,\r\n\t\t\t)?.value;\r\n\t\t}\r\n\r\n\t\treturn rangeGridSizeDefinition;\r\n\t}, [rangeStart, rangeEnd, rangeGridSizeDefinition]);\r\n\r\n\tconst valueToPixelsInternal = useCallback(\r\n\t\t(value: number, range: Range) => {\r\n\t\t\tconst start = range.start;\r\n\t\t\tconst end = range.end;\r\n\r\n\t\t\tconst valueToPixel = timelineViewportWidth / (end - start);\r\n\t\t\treturn value * valueToPixel;\r\n\t\t},\r\n\t\t[timelineViewportWidth],\r\n\t);\r\n\r\n\tconst valueToPixels = useCallback<ValueToPixels>(\r\n\t\t(value: number, customRange?: Range) =>\r\n\t\t\tvalueToPixelsInternal(value, customRange ?? range),\r\n\t\t[valueToPixelsInternal, range],\r\n\t);\r\n\r\n\tconst pixelsToValueInternal = useCallback(\r\n\t\t(pixels: number, range: Range) => {\r\n\t\t\tconst start = range.start;\r\n\t\t\tconst end = range.end;\r\n\r\n\t\t\tconst pixelToMs = (end - start) / timelineViewportWidth;\r\n\t\t\treturn pixels * pixelToMs;\r\n\t\t},\r\n\t\t[timelineViewportWidth],\r\n\t);\r\n\r\n\tconst pixelsToValue = useCallback<PixelsToValue>(\r\n\t\t(pixels: number, customRange?: Range) =>\r\n\t\t\tpixelsToValueInternal(pixels, customRange ?? range),\r\n\t\t[range, pixelsToValueInternal],\r\n\t);\r\n\r\n\tconst getDeltaXFromScreenX = useCallback<GetDeltaXFromScreenX>(\r\n\t\t(screenX) => {\r\n\t\t\tconst side = direction === \"rtl\" ? \"right\" : \"left\";\r\n\r\n\t\t\tconst timelineSideX =\r\n\t\t\t\t(timelineRef.current?.getBoundingClientRect()[side] || 0) +\r\n\t\t\t\tsidebarWidth * (direction === \"rtl\" ? -1 : 1);\r\n\r\n\t\t\tconst deltaX = screenX - timelineSideX;\r\n\r\n\t\t\treturn deltaX;\r\n\t\t},\r\n\t\t[timelineRef, sidebarWidth, direction],\r\n\t);\r\n\r\n\tconst snapValueToRangeGrid = useCallback(\r\n\t\t(value: number) => {\r\n\t\t\tif (!rangeGridSize) return value;\r\n\r\n\t\t\treturn Math.round(value / rangeGridSize) * rangeGridSize;\r\n\t\t},\r\n\t\t[rangeGridSize],\r\n\t);\r\n\r\n\tconst getValueFromScreenXInternal = useCallback(\r\n\t\t(screenX: number, range: Range) => {\r\n\t\t\tconst deltaX = getDeltaXFromScreenX(screenX);\r\n\t\t\tconst delta =\r\n\t\t\t\tpixelsToValueInternal(deltaX, range) * (direction === \"rtl\" ? -1 : 1);\r\n\r\n\t\t\treturn snapValueToRangeGrid(range.start + delta);\r\n\t\t},\r\n\t\t[\r\n\t\t\tdirection,\r\n\t\t\tpixelsToValueInternal,\r\n\t\t\tgetDeltaXFromScreenX,\r\n\t\t\tsnapValueToRangeGrid,\r\n\t\t],\r\n\t);\r\n\r\n\tconst getValueFromScreenX = useCallback<GetValueFromScreenX>(\r\n\t\t(screenX: number) => getValueFromScreenXInternal(screenX, range),\r\n\t\t[range, getValueFromScreenXInternal],\r\n\t);\r\n\r\n\tconst getSpanFromDragEvent = useCallback<GetSpanFromDragEvent>(\r\n\t\t(event) => {\r\n\t\t\tconst side = direction === \"rtl\" ? \"right\" : \"left\";\r\n\t\t\tconst itemX = event.active.rect.current.translated?.[side] || 0;\r\n\r\n\t\t\tconst start = getValueFromScreenX(itemX);\r\n\r\n\t\t\tif (event.active.data.current?.span) {\r\n\t\t\t\tconst { start: prevItemStart, end: prevItemEnd } =\r\n\t\t\t\t\tevent.active.data.current.span;\r\n\r\n\t\t\t\tconst itemDuration = prevItemEnd - prevItemStart;\r\n\r\n\t\t\t\tconst end = snapValueToRangeGrid(start + itemDuration);\r\n\r\n\t\t\t\treturn { start, end };\r\n\t\t\t} else if (event.active.data.current?.duration) {\r\n\t\t\t\tconst itemDuration = event.active.data.current.duration;\r\n\r\n\t\t\t\tconst end = snapValueToRangeGrid(start + itemDuration);\r\n\r\n\t\t\t\treturn { start, end };\r\n\t\t\t}\r\n\r\n\t\t\treturn null;\r\n\t\t},\r\n\t\t[getValueFromScreenX, snapValueToRangeGrid, direction],\r\n\t);\r\n\r\n\tconst getSpanFromResizeEvent = useCallback<GetSpanFromResizeEvent>(\r\n\t\t(event) => {\r\n\t\t\tif (event.active.data.current?.span) {\r\n\t\t\t\tconst prevSpan = event.active.data.current.span;\r\n\t\t\t\tconst delta = pixelsToValue(event.delta.x);\r\n\r\n\t\t\t\tconst updatedRange: Range = {\r\n\t\t\t\t\t...prevSpan,\r\n\t\t\t\t};\r\n\r\n\t\t\t\tupdatedRange[event.direction] = snapValueToRangeGrid(\r\n\t\t\t\t\tprevSpan[event.direction] + delta,\r\n\t\t\t\t);\r\n\r\n\t\t\t\treturn updatedRange;\r\n\t\t\t}\r\n\r\n\t\t\treturn null;\r\n\t\t},\r\n\t\t[pixelsToValue, snapValueToRangeGrid],\r\n\t);\r\n\r\n\tconst onPanEnd = useCallback<OnPanEnd>(\r\n\t\t(event) => {\r\n\t\t\tonRangeChanged((prevRange) => {\r\n\t\t\t\tconst deltaX =\r\n\t\t\t\t\tpixelsToValueInternal(event.deltaX, prevRange) *\r\n\t\t\t\t\t(direction === \"rtl\" ? -1 : 1);\r\n\t\t\t\tconst deltaY =\r\n\t\t\t\t\tpixelsToValueInternal(event.deltaY, prevRange) *\r\n\t\t\t\t\t(direction === \"rtl\" ? -1 : 1);\r\n\r\n\t\t\t\tconst rangeDuration = prevRange.end - prevRange.start;\r\n\r\n\t\t\t\tconst startBias = event.clientX\r\n\t\t\t\t\t? (prevRange.start -\r\n\t\t\t\t\t\t\tgetValueFromScreenXInternal(event.clientX, prevRange)) /\r\n\t\t\t\t\t\trangeDuration\r\n\t\t\t\t\t: 1;\r\n\t\t\t\tconst endBias = event.clientX\r\n\t\t\t\t\t? (getValueFromScreenXInternal(event.clientX, prevRange) -\r\n\t\t\t\t\t\t\tprevRange.end) /\r\n\t\t\t\t\t\trangeDuration\r\n\t\t\t\t\t: 1;\r\n\r\n\t\t\t\tconst startDelta = deltaY * startBias + deltaX;\r\n\t\t\t\tconst endDelta = -deltaY * endBias + deltaX;\r\n\r\n\t\t\t\treturn {\r\n\t\t\t\t\tstart: prevRange.start + startDelta,\r\n\t\t\t\t\tend: prevRange.end + endDelta,\r\n\t\t\t\t};\r\n\t\t\t});\r\n\t\t},\r\n\t\t[\r\n\t\t\tdirection,\r\n\t\t\tpixelsToValueInternal,\r\n\t\t\tgetValueFromScreenXInternal,\r\n\t\t\tonRangeChanged,\r\n\t\t],\r\n\t);\r\n\r\n\tconst value = useMemo<TimelineBag>(\r\n\t\t() => ({\r\n\t\t\tstyle,\r\n\t\t\trange,\r\n\t\t\toverlayed,\r\n\t\t\tonPanEnd,\r\n\t\t\tonResizeEnd,\r\n\t\t\tonResizeMove,\r\n\t\t\tonResizeStart,\r\n\t\t\tsidebarRef,\r\n\t\t\tsetSidebarRef,\r\n\t\t\tsidebarWidth,\r\n\t\t\tresizeHandleWidth,\r\n\t\t\tpixelsToValue,\r\n\t\t\tvalueToPixels,\r\n\t\t\ttimelineRef,\r\n\t\t\tsetTimelineRef,\r\n\t\t\tdirection,\r\n\t\t\trangeGridSize,\r\n\t\t\tgetValueFromScreenX,\r\n\t\t\tgetDeltaXFromScreenX,\r\n\t\t\tgetSpanFromDragEvent,\r\n\t\t\tgetSpanFromResizeEvent,\r\n\t\t}),\r\n\t\t[\r\n\t\t\trange,\r\n\t\t\toverlayed,\r\n\t\t\tonPanEnd,\r\n\t\t\tonResizeEnd,\r\n\t\t\tonResizeMove,\r\n\t\t\tonResizeStart,\r\n\t\t\tsidebarRef,\r\n\t\t\tsetSidebarRef,\r\n\t\t\tsidebarWidth,\r\n\t\t\tresizeHandleWidth,\r\n\t\t\tpixelsToValue,\r\n\t\t\tvalueToPixels,\r\n\t\t\ttimelineRef,\r\n\t\t\tsetTimelineRef,\r\n\t\t\tdirection,\r\n\t\t\trangeGridSize,\r\n\t\t\tgetValueFromScreenX,\r\n\t\t\tgetDeltaXFromScreenX,\r\n\t\t\tgetSpanFromDragEvent,\r\n\t\t\tgetSpanFromResizeEvent,\r\n\t\t],\r\n\t);\r\n\r\n\tusePanStrategy(value, onPanEnd);\r\n\r\n\treturn value;\r\n}\r\n","import { type MutableRefObject, useCallback, useRef, useState } from \"react\";\r\nimport ResizeObserver from \"resize-observer-polyfill\";\r\n\r\nexport default function useElementRef() {\r\n\tconst [ref, setRef] = useState<MutableRefObject<HTMLElement | null>>({\r\n\t\tcurrent: null,\r\n\t});\r\n\tconst [width, setWidth] = useState(0);\r\n\tconst [direction, setDirection] = useState<CanvasDirection>(\"ltr\");\r\n\r\n\tconst resizeObserver = useRef<ResizeObserver>();\r\n\r\n\tconst onSetRef = useCallback((element: HTMLElement | null) => {\r\n\t\tresizeObserver.current?.disconnect();\r\n\r\n\t\tif (element) {\r\n\t\t\tresizeObserver.current = new ResizeObserver((entries) => {\r\n\t\t\t\tsetWidth(entries[0].contentRect.width);\r\n\t\t\t});\r\n\r\n\t\t\tresizeObserver.current.observe(element);\r\n\r\n\t\t\tsetDirection(getComputedStyle(element).direction as CanvasDirection);\r\n\t\t}\r\n\r\n\t\tsetRef({ current: element });\r\n\t}, []);\r\n\r\n\treturn {\r\n\t\tref,\r\n\t\tsetRef: onSetRef,\r\n\t\twidth,\r\n\t\tdirection,\r\n\t};\r\n}\r\n","import { useDraggable } from \"@dnd-kit/core\";\r\nimport { CSS } from \"@dnd-kit/utilities\";\r\nimport type { CSSProperties, PointerEventHandler } from \"react\";\r\nimport { useCallback, useLayoutEffect, useMemo, useRef, useState } from \"react\";\r\n\r\nimport type {\r\n\tDragDirection,\r\n\tItemData,\r\n\tResizeEndEvent,\r\n\tResizeMoveEvent,\r\n\tResizeStartEvent,\r\n\tUseItemProps,\r\n} from \"../types\";\r\n\r\nimport useTimelineContext from \"./useTimelineContext\";\r\n\r\nconst getDragDirection = (\r\n\tmouseX: number,\r\n\tclientRect: DOMRect,\r\n\tdirection: CanvasDirection,\r\n\tresizeHandleWidth: number,\r\n): DragDirection | null => {\r\n\tconst startSide = direction === \"rtl\" ? \"right\" : \"left\";\r\n\tconst endSide = direction === \"rtl\" ? \"left\" : \"right\";\r\n\r\n\tif (Math.abs(mouseX - clientRect[startSide]) <= resizeHandleWidth / 2) {\r\n\t\treturn \"start\";\r\n\t}\r\n\r\n\tif (Math.abs(mouseX - clientRect[endSide]) <= resizeHandleWidth / 2) {\r\n\t\treturn \"end\";\r\n\t}\r\n\r\n\treturn null;\r\n};\r\n\r\nexport default function useItem(props: UseItemProps) {\r\n\tconst dataRef = useRef<ItemData>({} as ItemData);\r\n\tconst dragStartX = useRef<number>();\r\n\tconst [dragDirection, setDragDirection] = useState<DragDirection | null>();\r\n\r\n\tconst {\r\n\t\trange,\r\n\t\toverlayed,\r\n\t\tonResizeEnd,\r\n\t\tonResizeMove,\r\n\t\tonResizeStart,\r\n\t\tdirection,\r\n\t\tresizeHandleWidth,\r\n\t\tvalueToPixels,\r\n\t\tgetSpanFromDragEvent,\r\n\t\tgetSpanFromResizeEvent,\r\n\t} = useTimelineContext();\r\n\r\n\tconst propsOnResizeEnd = props.onResizeEnd;\r\n\tconst propsOnResizeStart = props.onResizeStart;\r\n\tconst propsOnResizeMove = props.onResizeMove;\r\n\r\n\tconst onResizeEndCallback = useCallback(\r\n\t\t(event: ResizeEndEvent) => {\r\n\t\t\tonResizeEnd(event);\r\n\t\t\tpropsOnResizeEnd?.(event);\r\n\t\t},\r\n\t\t[onResizeEnd, propsOnResizeEnd],\r\n\t);\r\n\r\n\tconst onResizeStartCallback = useCallback(\r\n\t\t(event: ResizeStartEvent) => {\r\n\t\t\tonResizeStart?.(event);\r\n\t\t\tpropsOnResizeStart?.(event);\r\n\t\t},\r\n\t\t[onResizeStart, propsOnResizeStart],\r\n\t);\r\n\r\n\tconst onResizeMoveCallback = useCallback(\r\n\t\t(event: ResizeMoveEvent) => {\r\n\t\t\tonResizeMove?.(event);\r\n\t\t\tpropsOnResizeMove?.(event);\r\n\t\t},\r\n\t\t[onResizeMove, propsOnResizeMove],\r\n\t);\r\n\r\n\tdataRef.current = {\r\n\t\tgetSpanFromDragEvent,\r\n\t\tgetSpanFromResizeEvent,\r\n\t\tspan: props.span,\r\n\t\t...(props.data || {}),\r\n\t};\r\n\r\n\tconst draggableProps = useDraggable({\r\n\t\tid: props.id,\r\n\t\tdata: dataRef.current,\r\n\t\tdisabled: props.disabled,\r\n\t});\r\n\r\n\tconst deltaXStart = valueToPixels(props.span.start - range.start);\r\n\r\n\tconst deltaXEnd = valueToPixels(range.end - props.span.end);\r\n\r\n\tconst width = valueToPixels(props.span.end - props.span.start);\r\n\r\n\tconst sideStart = direction === \"rtl\" ? \"right\" : \"left\";\r\n\r\n\tconst sideEnd = direction === \"rtl\" ? \"left\" : \"right\";\r\n\r\n\tconst cursor = props.disabled\r\n\t\t? \"inherit\"\r\n\t\t: draggableProps.isDragging\r\n\t\t\t? \"grabbing\"\r\n\t\t\t: \"grab\";\r\n\r\n\tuseLayoutEffect(() => {\r\n\t\tif (!dragDirection) return;\r\n\r\n\t\tconst pointermoveHandler = (event: globalThis.PointerEvent) => {\r\n\t\t\tif (!dragStartX.current || !draggableProps.node.current) return;\r\n\r\n\t\t\tconst dragDeltaX =\r\n\t\t\t\t(event.clientX - dragStartX.current) * (direction === \"rtl\" ? -1 : 1);\r\n\r\n\t\t\tif (dragDirection === \"start\") {\r\n\t\t\t\tconst newSideDelta = deltaXStart + dragDeltaX;\r\n\t\t\t\tdraggableProps.node.current.style[sideStart] = `${newSideDelta}px`;\r\n\r\n\t\t\t\tconst newWidth = width + deltaXStart - newSideDelta;\r\n\t\t\t\tdraggableProps.node.current.style.width = `${newWidth}px`;\r\n\t\t\t} else {\r\n\t\t\t\tconst otherSideDelta = deltaXStart + width + dragDeltaX;\r\n\t\t\t\tconst newWidth = otherSideDelta - deltaXStart;\r\n\t\t\t\tdraggableProps.node.current.style.width = `${newWidth}px`;\r\n\t\t\t}\r\n\r\n\t\t\tonResizeMoveCallback({\r\n\t\t\t\tactivatorEvent: event,\r\n\t\t\t\tdelta: {\r\n\t\t\t\t\tx: dragDeltaX,\r\n\t\t\t\t},\r\n\t\t\t\tdirection: dragDirection,\r\n\t\t\t\tactive: {\r\n\t\t\t\t\tid: props.id,\r\n\t\t\t\t\tdata: dataRef,\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\twindow.addEventListener(\"pointermove\", pointermoveHandler);\r\n\r\n\t\treturn () => {\r\n\t\t\twindow.removeEventListener(\"pointermove\", pointermoveHandler);\r\n\t\t};\r\n\t}, [\r\n\t\tsideStart,\r\n\t\twidth,\r\n\t\tdeltaXStart,\r\n\t\tprops.id,\r\n\t\tdragDirection,\r\n\t\tdirection,\r\n\t\tdraggableProps.node,\r\n\t\tonResizeMoveCallback,\r\n\t]);\r\n\r\n\tuseLayoutEffect(() => {\r\n\t\tif (!dragDirection) return;\r\n\r\n\t\tconst pointerupHandler = (event: globalThis.PointerEvent) => {\r\n\t\t\tif (!dragStartX.current || !draggableProps.node.current) return;\r\n\r\n\t\t\tlet dragDeltaX = 0;\r\n\r\n\t\t\tif (dragDirection === \"start\") {\r\n\t\t\t\tconst currentSideDelta = Number.parseInt(\r\n\t\t\t\t\tdraggableProps.node.current.style[sideStart].slice(0, -2),\r\n\t\t\t\t);\r\n\t\t\t\tdragDeltaX = currentSideDelta - deltaXStart;\r\n\t\t\t} else {\r\n\t\t\t\tconst currentWidth = Number.parseInt(\r\n\t\t\t\t\tdraggableProps.node.current.style.width.slice(0, -2),\r\n\t\t\t\t);\r\n\t\t\t\tdragDeltaX = currentWidth - width;\r\n\t\t\t}\r\n\r\n\t\t\tonResizeEndCallback({\r\n\t\t\t\tactivatorEvent: event,\r\n\t\t\t\tdelta: {\r\n\t\t\t\t\tx: dragDeltaX,\r\n\t\t\t\t},\r\n\t\t\t\tdirection: dragDirection,\r\n\t\t\t\tactive: {\r\n\t\t\t\t\tid: props.id,\r\n\t\t\t\t\tdata: dataRef,\r\n\t\t\t\t},\r\n\t\t\t});\r\n\r\n\t\t\tsetDragDirection(null);\r\n\r\n\t\t\tdraggableProps.node.current.style.width = `${width}px`;\r\n\t\t\tdraggableProps.node.current.style[sideStart] = `${deltaXStart}px`;\r\n\t\t};\r\n\r\n\t\twindow.addEventListener(\"pointerup\", pointerupHandler);\r\n\r\n\t\treturn () => {\r\n\t\t\twindow.removeEventListener(\"pointerup\", pointerupHandler);\r\n\t\t};\r\n\t}, [\r\n\t\tsideStart,\r\n\t\twidth,\r\n\t\tdeltaXStart,\r\n\t\tprops.id,\r\n\t\tdragDirection,\r\n\t\tdraggableProps.node,\r\n\t\tonResizeEndCallback,\r\n\t]);\r\n\r\n\tconst onPointerMove = useCallback<PointerEventHandler>(\r\n\t\t(event) => {\r\n\t\t\tif (!draggableProps.node.current || props.disabled) return;\r\n\r\n\t\t\tconst newDragDirection = getDragDirection(\r\n\t\t\t\tevent.clientX,\r\n\t\t\t\tdraggableProps.node.current.getBoundingClientRect(),\r\n\t\t\t\tdirection,\r\n\t\t\t\tresizeHandleWidth,\r\n\t\t\t);\r\n\r\n\t\t\tif (newDragDirection) {\r\n\t\t\t\tdraggableProps.node.current.style.cursor = \"col-resize\";\r\n\t\t\t} else {\r\n\t\t\t\tdraggableProps.node.current.style.cursor = cursor;\r\n\t\t\t}\r\n\t\t},\r\n\t\t[draggableProps.node, props.disabled, direction, cursor, resizeHandleWidth],\r\n\t);\r\n\r\n\tconst onPointerDown = useCallback<PointerEventHandler>(\r\n\t\t(event) => {\r\n\t\t\tif (!draggableProps.node.current || props.disabled) return;\r\n\r\n\t\t\tconst newDragDirection = getDragDirection(\r\n\t\t\t\tevent.clientX,\r\n\t\t\t\tdraggableProps.node.current.getBoundingClientRect(),\r\n\t\t\t\tdirection,\r\n\t\t\t\tresizeHandleWidth,\r\n\t\t\t);\r\n\r\n\t\t\tif (newDragDirection) {\r\n\t\t\t\tsetDragDirection(newDragDirection);\r\n\t\t\t\tdragStartX.current = event.clientX;\r\n\r\n\t\t\t\tonResizeStartCallback({\r\n\t\t\t\t\tactivatorEvent: event as unknown as Event,\r\n\t\t\t\t\tactive: {\r\n\t\t\t\t\t\tid: props.id,\r\n\t\t\t\t\t\tdata: dataRef,\r\n\t\t\t\t\t},\r\n\t\t\t\t\tdirection: newDragDirection,\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tdraggableProps.listeners?.onPointerDown(event);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[\r\n\t\t\tprops.id,\r\n\t\t\tprops.disabled,\r\n\t\t\tdirection,\r\n\t\t\tresizeHandleWidth,\r\n\t\t\tdraggableProps.node,\r\n\t\t\tonResizeStartCallback,\r\n\t\t\tdraggableProps.listeners,\r\n\t\t],\r\n\t);\r\n\r\n\tconst paddingStart = direction === \"rtl\" ? \"paddingRight\" : \"paddingLeft\";\r\n\r\n\tconst paddingEnd = direction === \"rtl\" ? \"paddingLeft\" : \"paddingRight\";\r\n\r\n\tconst transform = CSS.Translate.toString(draggableProps.transform);\r\n\r\n\tconst itemStyle: CSSProperties = useMemo(\r\n\t\t() => ({\r\n\t\t\tposition: \"absolute\",\r\n\t\t\ttop: 0,\r\n\t\t\twidth,\r\n\t\t\t[sideStart]: deltaXStart,\r\n\t\t\t[sideEnd]: deltaXEnd,\r\n\t\t\tcursor,\r\n\t\t\theight: \"100%\",\r\n\t\t\ttouchAction: \"none\",\r\n\t\t\t...(!(draggableProps.isDragging && overlayed) && {\r\n\t\t\t\ttransform,\r\n\t\t\t}),\r\n\t\t}),\r\n\t\t[\r\n\t\t\twidth,\r\n\t\t\tsideStart,\r\n\t\t\tdeltaXStart,\r\n\t\t\tsideEnd,\r\n\t\t\tdeltaXEnd,\r\n\t\t\tcursor,\r\n\t\t\tdraggableProps.isDragging,\r\n\t\t\toverlayed,\r\n\t\t\ttransform,\r\n\t\t],\r\n\t);\r\n\r\n\tconst itemContentStyle: CSSProperties = useMemo(\r\n\t\t() => ({\r\n\t\t\theight: \"100%\",\r\n\t\t\tdisplay: \"flex\",\r\n\t\t\toverflow: \"hidden\",\r\n\t\t\talignItems: \"stretch\",\r\n\t\t\t[paddingStart]: Math.max(0, -deltaXStart),\r\n\t\t\t[paddingEnd]: Math.max(0, -deltaXEnd),\r\n\t\t}),\r\n\t\t[paddingStart, paddingEnd, deltaXStart, deltaXEnd],\r\n\t);\r\n\r\n\treturn {\r\n\t\titemStyle,\r\n\t\titemContentStyle,\r\n\t\t...draggableProps,\r\n\t\tlisteners: {\r\n\t\t\t...draggableProps.listeners,\r\n\t\t\tonPointerDown,\r\n\t\t\tonPointerMove,\r\n\t\t},\r\n\t};\r\n}\r\n"],"mappings":"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","names":["timelineContext","import_core","import_react","import_react","import_react","import_react","ResizeObserver","value","range","import_core","import_react"]}